/* tslint:disable */
/* eslint-disable */
/**
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver\'s working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Currencies } from './Currencies';
import {
    CurrenciesFromJSON,
    CurrenciesFromJSONTyped,
    CurrenciesToJSON,
} from './Currencies';
import type { TollCosts } from './TollCosts';
import {
    TollCostsFromJSON,
    TollCostsFromJSONTyped,
    TollCostsToJSON,
} from './TollCosts';
import type { TollSection } from './TollSection';
import {
    TollSectionFromJSON,
    TollSectionFromJSONTyped,
    TollSectionToJSON,
} from './TollSection';
import type { TollSystem } from './TollSystem';
import {
    TollSystemFromJSON,
    TollSystemFromJSONTyped,
    TollSystemToJSON,
} from './TollSystem';

/**
 * Detailed information on the toll costs, providers and tariff information.  
 * Toll prices do not include VAT.
 * @export
 * @interface Toll
 */
export interface Toll {
    /**
     * 
     * @type {TollCosts}
     * @memberof Toll
     */
    costs?: TollCosts;
    /**
     * The list of toll sections defined by the toll operators.
     * @type {Array<TollSection>}
     * @memberof Toll
     */
    sections?: Array<TollSection>;
    /**
     * The list of toll systems defined by the toll operators.
     * @type {Array<TollSystem>}
     * @memberof Toll
     */
    systems?: Array<TollSystem>;
    /**
     * 
     * @type {Currencies}
     * @memberof Toll
     */
    currencies?: Currencies;
}

/**
 * Check if a given object implements the Toll interface.
 */
export function instanceOfToll(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TollFromJSON(json: any): Toll {
    return TollFromJSONTyped(json, false);
}

export function TollFromJSONTyped(json: any, ignoreDiscriminator: boolean): Toll {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'costs': !exists(json, 'costs') ? undefined : TollCostsFromJSON(json['costs']),
        'sections': !exists(json, 'sections') ? undefined : ((json['sections'] as Array<any>).map(TollSectionFromJSON)),
        'systems': !exists(json, 'systems') ? undefined : ((json['systems'] as Array<any>).map(TollSystemFromJSON)),
        'currencies': !exists(json, 'currencies') ? undefined : CurrenciesFromJSON(json['currencies']),
    };
}

export function TollToJSON(value?: Toll | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'costs': TollCostsToJSON(value.costs),
        'sections': value.sections === undefined ? undefined : ((value.sections as Array<any>).map(TollSectionToJSON)),
        'systems': value.systems === undefined ? undefined : ((value.systems as Array<any>).map(TollSystemToJSON)),
        'currencies': CurrenciesToJSON(value.currencies),
    };
}

