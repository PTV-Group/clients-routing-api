/* tslint:disable */
/* eslint-disable */
/**
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver\'s working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorkLogbook } from './WorkLogbook';
import {
    WorkLogbookFromJSON,
    WorkLogbookFromJSONTyped,
    WorkLogbookToJSON,
} from './WorkLogbook';
import type { WorkingHoursPreset } from './WorkingHoursPreset';
import {
    WorkingHoursPresetFromJSON,
    WorkingHoursPresetFromJSONTyped,
    WorkingHoursPresetToJSON,
} from './WorkingHoursPreset';

/**
 * 
 * @export
 * @interface DriverBody
 */
export interface DriverBody {
    /**
     * 
     * @type {WorkingHoursPreset}
     * @memberof DriverBody
     */
    workingHoursPreset: WorkingHoursPreset | null;
    /**
     * 
     * @type {WorkLogbook}
     * @memberof DriverBody
     */
    workLogbook?: WorkLogbook;
}

/**
 * Check if a given object implements the DriverBody interface.
 */
export function instanceOfDriverBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workingHoursPreset" in value;

    return isInstance;
}

export function DriverBodyFromJSON(json: any): DriverBody {
    return DriverBodyFromJSONTyped(json, false);
}

export function DriverBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DriverBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'workingHoursPreset': WorkingHoursPresetFromJSON(json['workingHoursPreset']),
        'workLogbook': !exists(json, 'workLogbook') ? undefined : WorkLogbookFromJSON(json['workLogbook']),
    };
}

export function DriverBodyToJSON(value?: DriverBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'workingHoursPreset': WorkingHoursPresetToJSON(value.workingHoursPreset),
        'workLogbook': WorkLogbookToJSON(value.workLogbook),
    };
}

