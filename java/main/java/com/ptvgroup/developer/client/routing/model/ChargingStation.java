/*
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver's working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routing.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routing.model.CurrentType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Defines the charging capabilities available the a waypoint. 
 */
@ApiModel(description = "Defines the charging capabilities available the a waypoint. ")
@JsonPropertyOrder({
  ChargingStation.JSON_PROPERTY_POWER,
  ChargingStation.JSON_PROPERTY_CURRENT_TYPE,
  ChargingStation.JSON_PROPERTY_SETUP_TIME,
  ChargingStation.JSON_PROPERTY_K_WH_PRICE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T15:46:58.406580Z[Etc/UTC]")
public class ChargingStation {
  public static final String JSON_PROPERTY_POWER = "power";
  private Integer power;

  public static final String JSON_PROPERTY_CURRENT_TYPE = "currentType";
  private CurrentType currentType = CurrentType.ALTERNATING;

  public static final String JSON_PROPERTY_SETUP_TIME = "setupTime";
  private Integer setupTime = 0;

  public static final String JSON_PROPERTY_K_WH_PRICE = "kWhPrice";
  private Double kWhPrice = 0d;

  public ChargingStation() { 
  }

  public ChargingStation power(Integer power) {
    this.power = power;
    return this;
  }

   /**
   * The power delivered by the charging station [kW].
   * @return power
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The power delivered by the charging station [kW].")
  @JsonProperty(JSON_PROPERTY_POWER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPower() {
    return power;
  }


  @JsonProperty(JSON_PROPERTY_POWER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPower(Integer power) {
    this.power = power;
  }


  public ChargingStation currentType(CurrentType currentType) {
    this.currentType = currentType;
    return this;
  }

   /**
   * Get currentType
   * @return currentType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CurrentType getCurrentType() {
    return currentType;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentType(CurrentType currentType) {
    this.currentType = currentType;
  }


  public ChargingStation setupTime(Integer setupTime) {
    this.setupTime = setupTime;
    return this;
  }

   /**
   * The time to setup the connection [s].
   * minimum: 0
   * @return setupTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time to setup the connection [s].")
  @JsonProperty(JSON_PROPERTY_SETUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSetupTime() {
    return setupTime;
  }


  @JsonProperty(JSON_PROPERTY_SETUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetupTime(Integer setupTime) {
    this.setupTime = setupTime;
  }


  public ChargingStation kWhPrice(Double kWhPrice) {
    this.kWhPrice = kWhPrice;
    return this;
  }

   /**
   * The price of one kWh in the currency defined in **options[currency]**.
   * minimum: 0
   * @return kWhPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The price of one kWh in the currency defined in **options[currency]**.")
  @JsonProperty(JSON_PROPERTY_K_WH_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getkWhPrice() {
    return kWhPrice;
  }


  @JsonProperty(JSON_PROPERTY_K_WH_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setkWhPrice(Double kWhPrice) {
    this.kWhPrice = kWhPrice;
  }


  /**
   * Return true if this ChargingStation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingStation chargingStation = (ChargingStation) o;
    return Objects.equals(this.power, chargingStation.power) &&
        Objects.equals(this.currentType, chargingStation.currentType) &&
        Objects.equals(this.setupTime, chargingStation.setupTime) &&
        Objects.equals(this.kWhPrice, chargingStation.kWhPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(power, currentType, setupTime, kWhPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingStation {\n");
    sb.append("    power: ").append(toIndentedString(power)).append("\n");
    sb.append("    currentType: ").append(toIndentedString(currentType)).append("\n");
    sb.append("    setupTime: ").append(toIndentedString(setupTime)).append("\n");
    sb.append("    kWhPrice: ").append(toIndentedString(kWhPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

