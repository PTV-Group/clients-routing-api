/*
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver's working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routing.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routing.model.Currencies;
import com.ptvgroup.developer.client.routing.model.TollCosts;
import com.ptvgroup.developer.client.routing.model.TollSection;
import com.ptvgroup.developer.client.routing.model.TollSystem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Detailed information on the toll costs, providers and tariff information.   Toll prices do not include VAT. 
 */
@ApiModel(description = "Detailed information on the toll costs, providers and tariff information.   Toll prices do not include VAT. ")
@JsonPropertyOrder({
  Toll.JSON_PROPERTY_COSTS,
  Toll.JSON_PROPERTY_SECTIONS,
  Toll.JSON_PROPERTY_SYSTEMS,
  Toll.JSON_PROPERTY_CURRENCIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-16T16:11:36.609539Z[Etc/UTC]")
public class Toll {
  public static final String JSON_PROPERTY_COSTS = "costs";
  private TollCosts costs;

  public static final String JSON_PROPERTY_SECTIONS = "sections";
  private List<TollSection> sections = null;

  public static final String JSON_PROPERTY_SYSTEMS = "systems";
  private List<TollSystem> systems = null;

  public static final String JSON_PROPERTY_CURRENCIES = "currencies";
  private Currencies currencies;

  public Toll() { 
  }

  public Toll costs(TollCosts costs) {
    this.costs = costs;
    return this;
  }

   /**
   * Get costs
   * @return costs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TollCosts getCosts() {
    return costs;
  }


  @JsonProperty(JSON_PROPERTY_COSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCosts(TollCosts costs) {
    this.costs = costs;
  }


  public Toll sections(List<TollSection> sections) {
    this.sections = sections;
    return this;
  }

  public Toll addSectionsItem(TollSection sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * The list of toll sections defined by the toll operators.
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of toll sections defined by the toll operators.")
  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TollSection> getSections() {
    return sections;
  }


  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSections(List<TollSection> sections) {
    this.sections = sections;
  }


  public Toll systems(List<TollSystem> systems) {
    this.systems = systems;
    return this;
  }

  public Toll addSystemsItem(TollSystem systemsItem) {
    if (this.systems == null) {
      this.systems = new ArrayList<>();
    }
    this.systems.add(systemsItem);
    return this;
  }

   /**
   * The list of toll systems defined by the toll operators.
   * @return systems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of toll systems defined by the toll operators.")
  @JsonProperty(JSON_PROPERTY_SYSTEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TollSystem> getSystems() {
    return systems;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystems(List<TollSystem> systems) {
    this.systems = systems;
  }


  public Toll currencies(Currencies currencies) {
    this.currencies = currencies;
    return this;
  }

   /**
   * Get currencies
   * @return currencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Currencies getCurrencies() {
    return currencies;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencies(Currencies currencies) {
    this.currencies = currencies;
  }


  /**
   * Return true if this Toll object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Toll toll = (Toll) o;
    return Objects.equals(this.costs, toll.costs) &&
        Objects.equals(this.sections, toll.sections) &&
        Objects.equals(this.systems, toll.systems) &&
        Objects.equals(this.currencies, toll.currencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costs, sections, systems, currencies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Toll {\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    systems: ").append(toIndentedString(systems)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

