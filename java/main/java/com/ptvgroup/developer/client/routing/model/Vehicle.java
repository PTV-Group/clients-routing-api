/*
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver's working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routing.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routing.model.ElectricityType;
import com.ptvgroup.developer.client.routing.model.EmissionStandard;
import com.ptvgroup.developer.client.routing.model.EngineType;
import com.ptvgroup.developer.client.routing.model.EtcSubscriptionTypes;
import com.ptvgroup.developer.client.routing.model.FuelType;
import com.ptvgroup.developer.client.routing.model.HazardousMaterials;
import com.ptvgroup.developer.client.routing.model.LowEmissionZoneTypes;
import com.ptvgroup.developer.client.routing.model.ParticleReductionClass;
import com.ptvgroup.developer.client.routing.model.TruckRoutes;
import com.ptvgroup.developer.client.routing.model.TunnelRestrictionCode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Vehicle
 */
@JsonPropertyOrder({
  Vehicle.JSON_PROPERTY_ENGINE_TYPE,
  Vehicle.JSON_PROPERTY_FUEL_TYPE,
  Vehicle.JSON_PROPERTY_ELECTRICITY_TYPE,
  Vehicle.JSON_PROPERTY_AVERAGE_FUEL_CONSUMPTION,
  Vehicle.JSON_PROPERTY_AVERAGE_ELECTRICITY_CONSUMPTION,
  Vehicle.JSON_PROPERTY_BIO_FUEL_RATIO,
  Vehicle.JSON_PROPERTY_HYBRID_RATIO,
  Vehicle.JSON_PROPERTY_DUAL_FUEL_RATIO,
  Vehicle.JSON_PROPERTY_CYLINDER_CAPACITY,
  Vehicle.JSON_PROPERTY_EMISSION_STANDARD,
  Vehicle.JSON_PROPERTY_LOW_EMISSION_ZONE_TYPES,
  Vehicle.JSON_PROPERTY_PARTICLE_REDUCTION_CLASS,
  Vehicle.JSON_PROPERTY_EMPTY_WEIGHT,
  Vehicle.JSON_PROPERTY_LOAD_WEIGHT,
  Vehicle.JSON_PROPERTY_TOTAL_PERMITTED_WEIGHT,
  Vehicle.JSON_PROPERTY_AXLE_WEIGHT,
  Vehicle.JSON_PROPERTY_NUMBER_OF_AXLES,
  Vehicle.JSON_PROPERTY_NUMBER_OF_TIRES,
  Vehicle.JSON_PROPERTY_HEIGHT,
  Vehicle.JSON_PROPERTY_HEIGHT_ABOVE_FRONT_AXLE,
  Vehicle.JSON_PROPERTY_LENGTH,
  Vehicle.JSON_PROPERTY_WIDTH,
  Vehicle.JSON_PROPERTY_HAZARDOUS_MATERIALS,
  Vehicle.JSON_PROPERTY_TUNNEL_RESTRICTION_CODE,
  Vehicle.JSON_PROPERTY_TRUCK_ROUTES,
  Vehicle.JSON_PROPERTY_COMMERCIAL,
  Vehicle.JSON_PROPERTY_ETC_SUBSCRIPTIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T07:23:48.569348Z[Etc/UTC]")
public class Vehicle {
  public static final String JSON_PROPERTY_ENGINE_TYPE = "engineType";
  private JsonNullable<EngineType> engineType = JsonNullable.<EngineType>undefined();

  public static final String JSON_PROPERTY_FUEL_TYPE = "fuelType";
  private JsonNullable<FuelType> fuelType = JsonNullable.<FuelType>undefined();

  public static final String JSON_PROPERTY_ELECTRICITY_TYPE = "electricityType";
  private JsonNullable<ElectricityType> electricityType = JsonNullable.<ElectricityType>undefined();

  public static final String JSON_PROPERTY_AVERAGE_FUEL_CONSUMPTION = "averageFuelConsumption";
  private JsonNullable<Double> averageFuelConsumption = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_AVERAGE_ELECTRICITY_CONSUMPTION = "averageElectricityConsumption";
  private JsonNullable<Double> averageElectricityConsumption = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BIO_FUEL_RATIO = "bioFuelRatio";
  private JsonNullable<Integer> bioFuelRatio = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_HYBRID_RATIO = "hybridRatio";
  private JsonNullable<Integer> hybridRatio = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DUAL_FUEL_RATIO = "dualFuelRatio";
  private JsonNullable<Integer> dualFuelRatio = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_CYLINDER_CAPACITY = "cylinderCapacity";
  private JsonNullable<Integer> cylinderCapacity = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EMISSION_STANDARD = "emissionStandard";
  private JsonNullable<EmissionStandard> emissionStandard = JsonNullable.<EmissionStandard>undefined();

  public static final String JSON_PROPERTY_LOW_EMISSION_ZONE_TYPES = "lowEmissionZoneTypes";
  private JsonNullable<List<LowEmissionZoneTypes>> lowEmissionZoneTypes = JsonNullable.<List<LowEmissionZoneTypes>>undefined();

  public static final String JSON_PROPERTY_PARTICLE_REDUCTION_CLASS = "particleReductionClass";
  private JsonNullable<ParticleReductionClass> particleReductionClass = JsonNullable.<ParticleReductionClass>undefined();

  public static final String JSON_PROPERTY_EMPTY_WEIGHT = "emptyWeight";
  private JsonNullable<Integer> emptyWeight = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LOAD_WEIGHT = "loadWeight";
  private JsonNullable<Integer> loadWeight = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TOTAL_PERMITTED_WEIGHT = "totalPermittedWeight";
  private JsonNullable<Integer> totalPermittedWeight = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_AXLE_WEIGHT = "axleWeight";
  private JsonNullable<Integer> axleWeight = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_NUMBER_OF_AXLES = "numberOfAxles";
  private JsonNullable<Integer> numberOfAxles = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_NUMBER_OF_TIRES = "numberOfTires";
  private JsonNullable<Integer> numberOfTires = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private JsonNullable<Integer> height = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_HEIGHT_ABOVE_FRONT_AXLE = "heightAboveFrontAxle";
  private JsonNullable<Integer> heightAboveFrontAxle = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LENGTH = "length";
  private JsonNullable<Integer> length = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_WIDTH = "width";
  private JsonNullable<Integer> width = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_HAZARDOUS_MATERIALS = "hazardousMaterials";
  private JsonNullable<List<HazardousMaterials>> hazardousMaterials = JsonNullable.<List<HazardousMaterials>>undefined();

  public static final String JSON_PROPERTY_TUNNEL_RESTRICTION_CODE = "tunnelRestrictionCode";
  private JsonNullable<TunnelRestrictionCode> tunnelRestrictionCode = JsonNullable.<TunnelRestrictionCode>undefined();

  public static final String JSON_PROPERTY_TRUCK_ROUTES = "truckRoutes";
  private JsonNullable<List<TruckRoutes>> truckRoutes = JsonNullable.<List<TruckRoutes>>undefined();

  public static final String JSON_PROPERTY_COMMERCIAL = "commercial";
  private JsonNullable<Boolean> commercial = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ETC_SUBSCRIPTIONS = "etcSubscriptions";
  private JsonNullable<List<EtcSubscriptionTypes>> etcSubscriptions = JsonNullable.<List<EtcSubscriptionTypes>>undefined();

  public Vehicle() { 
  }

  public Vehicle engineType(EngineType engineType) {
    this.engineType = JsonNullable.<EngineType>of(engineType);
    return this;
  }

   /**
   * Get engineType
   * @return engineType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EngineType getEngineType() {
        return engineType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EngineType> getEngineType_JsonNullable() {
    return engineType;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  public void setEngineType_JsonNullable(JsonNullable<EngineType> engineType) {
    this.engineType = engineType;
  }

  public void setEngineType(EngineType engineType) {
    this.engineType = JsonNullable.<EngineType>of(engineType);
  }


  public Vehicle fuelType(FuelType fuelType) {
    this.fuelType = JsonNullable.<FuelType>of(fuelType);
    return this;
  }

   /**
   * Get fuelType
   * @return fuelType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public FuelType getFuelType() {
        return fuelType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FuelType> getFuelType_JsonNullable() {
    return fuelType;
  }
  
  @JsonProperty(JSON_PROPERTY_FUEL_TYPE)
  public void setFuelType_JsonNullable(JsonNullable<FuelType> fuelType) {
    this.fuelType = fuelType;
  }

  public void setFuelType(FuelType fuelType) {
    this.fuelType = JsonNullable.<FuelType>of(fuelType);
  }


  public Vehicle electricityType(ElectricityType electricityType) {
    this.electricityType = JsonNullable.<ElectricityType>of(electricityType);
    return this;
  }

   /**
   * Get electricityType
   * @return electricityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ElectricityType getElectricityType() {
        return electricityType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ELECTRICITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ElectricityType> getElectricityType_JsonNullable() {
    return electricityType;
  }
  
  @JsonProperty(JSON_PROPERTY_ELECTRICITY_TYPE)
  public void setElectricityType_JsonNullable(JsonNullable<ElectricityType> electricityType) {
    this.electricityType = electricityType;
  }

  public void setElectricityType(ElectricityType electricityType) {
    this.electricityType = JsonNullable.<ElectricityType>of(electricityType);
  }


  public Vehicle averageFuelConsumption(Double averageFuelConsumption) {
    this.averageFuelConsumption = JsonNullable.<Double>of(averageFuelConsumption);
    return this;
  }

   /**
   * The average fuel consumption of the vehicle. Depending on the **fuelType** [l/100km] for liquid fuel types or [kg/100km] for gaseous fuel types.  Supported for **engineType** _COMBUSTION_  or _HYBRID_. Relevant for &#x60;emissions&#x60;. 
   * minimum: 0
   * @return averageFuelConsumption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "35", value = "The average fuel consumption of the vehicle. Depending on the **fuelType** [l/100km] for liquid fuel types or [kg/100km] for gaseous fuel types.  Supported for **engineType** _COMBUSTION_  or _HYBRID_. Relevant for `emissions`. ")
  @JsonIgnore

  public Double getAverageFuelConsumption() {
        return averageFuelConsumption.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVERAGE_FUEL_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAverageFuelConsumption_JsonNullable() {
    return averageFuelConsumption;
  }
  
  @JsonProperty(JSON_PROPERTY_AVERAGE_FUEL_CONSUMPTION)
  public void setAverageFuelConsumption_JsonNullable(JsonNullable<Double> averageFuelConsumption) {
    this.averageFuelConsumption = averageFuelConsumption;
  }

  public void setAverageFuelConsumption(Double averageFuelConsumption) {
    this.averageFuelConsumption = JsonNullable.<Double>of(averageFuelConsumption);
  }


  public Vehicle averageElectricityConsumption(Double averageElectricityConsumption) {
    this.averageElectricityConsumption = JsonNullable.<Double>of(averageElectricityConsumption);
    return this;
  }

   /**
   * The average power consumption of the vehicle [kWh/100km].  Supported for **engineType** _ELECTRIC_ or _HYBRID_. Relevant for &#x60;emissions&#x60;. 
   * minimum: 0
   * @return averageElectricityConsumption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "115", value = "The average power consumption of the vehicle [kWh/100km].  Supported for **engineType** _ELECTRIC_ or _HYBRID_. Relevant for `emissions`. ")
  @JsonIgnore

  public Double getAverageElectricityConsumption() {
        return averageElectricityConsumption.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVERAGE_ELECTRICITY_CONSUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAverageElectricityConsumption_JsonNullable() {
    return averageElectricityConsumption;
  }
  
  @JsonProperty(JSON_PROPERTY_AVERAGE_ELECTRICITY_CONSUMPTION)
  public void setAverageElectricityConsumption_JsonNullable(JsonNullable<Double> averageElectricityConsumption) {
    this.averageElectricityConsumption = averageElectricityConsumption;
  }

  public void setAverageElectricityConsumption(Double averageElectricityConsumption) {
    this.averageElectricityConsumption = JsonNullable.<Double>of(averageElectricityConsumption);
  }


  public Vehicle bioFuelRatio(Integer bioFuelRatio) {
    this.bioFuelRatio = JsonNullable.<Integer>of(bioFuelRatio);
    return this;
  }

   /**
   * The ratio of biofuel to conventional fuel [%], i.e. 10 for E10 with 10% biofuel.  Supported for **engineType** _COMBUSTION_ or _HYBRID_ and only for the fuel types _GASOLINE_, _DIESEL_, _CNG_GASOLINE_ and _LNG_GASOLINE_. Relevant for &#x60;emissions&#x60;. 
   * minimum: 0
   * maximum: 100
   * @return bioFuelRatio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "The ratio of biofuel to conventional fuel [%], i.e. 10 for E10 with 10% biofuel.  Supported for **engineType** _COMBUSTION_ or _HYBRID_ and only for the fuel types _GASOLINE_, _DIESEL_, _CNG_GASOLINE_ and _LNG_GASOLINE_. Relevant for `emissions`. ")
  @JsonIgnore

  public Integer getBioFuelRatio() {
        return bioFuelRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BIO_FUEL_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getBioFuelRatio_JsonNullable() {
    return bioFuelRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_BIO_FUEL_RATIO)
  public void setBioFuelRatio_JsonNullable(JsonNullable<Integer> bioFuelRatio) {
    this.bioFuelRatio = bioFuelRatio;
  }

  public void setBioFuelRatio(Integer bioFuelRatio) {
    this.bioFuelRatio = JsonNullable.<Integer>of(bioFuelRatio);
  }


  public Vehicle hybridRatio(Integer hybridRatio) {
    this.hybridRatio = JsonNullable.<Integer>of(hybridRatio);
    return this;
  }

   /**
   * Electric energy usage ratio from the total amount of energy consumed by the vehicle.  Supported for **engineType** _HYBRID_. Relevant for &#x60;emissions&#x60;. 
   * minimum: 1
   * maximum: 99
   * @return hybridRatio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50", value = "Electric energy usage ratio from the total amount of energy consumed by the vehicle.  Supported for **engineType** _HYBRID_. Relevant for `emissions`. ")
  @JsonIgnore

  public Integer getHybridRatio() {
        return hybridRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HYBRID_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getHybridRatio_JsonNullable() {
    return hybridRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_HYBRID_RATIO)
  public void setHybridRatio_JsonNullable(JsonNullable<Integer> hybridRatio) {
    this.hybridRatio = hybridRatio;
  }

  public void setHybridRatio(Integer hybridRatio) {
    this.hybridRatio = JsonNullable.<Integer>of(hybridRatio);
  }


  public Vehicle dualFuelRatio(Integer dualFuelRatio) {
    this.dualFuelRatio = JsonNullable.<Integer>of(dualFuelRatio);
    return this;
  }

   /**
   * Ratio of CNG or LPG usage from the total amount of fuel consumption.  Supported for **engineType** _COMBUSTION_ with **fuelType**  _CNG_GASOLINE_ or _LPG_GASOLINE_. Relevant for &#x60;emissions&#x60;. 
   * minimum: 1
   * maximum: 99
   * @return dualFuelRatio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50", value = "Ratio of CNG or LPG usage from the total amount of fuel consumption.  Supported for **engineType** _COMBUSTION_ with **fuelType**  _CNG_GASOLINE_ or _LPG_GASOLINE_. Relevant for `emissions`. ")
  @JsonIgnore

  public Integer getDualFuelRatio() {
        return dualFuelRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DUAL_FUEL_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDualFuelRatio_JsonNullable() {
    return dualFuelRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_DUAL_FUEL_RATIO)
  public void setDualFuelRatio_JsonNullable(JsonNullable<Integer> dualFuelRatio) {
    this.dualFuelRatio = dualFuelRatio;
  }

  public void setDualFuelRatio(Integer dualFuelRatio) {
    this.dualFuelRatio = JsonNullable.<Integer>of(dualFuelRatio);
  }


  public Vehicle cylinderCapacity(Integer cylinderCapacity) {
    this.cylinderCapacity = JsonNullable.<Integer>of(cylinderCapacity);
    return this;
  }

   /**
   * The cylinder capacity of the vehicle [cm&amp;#x00B3;]. This value is present for compatibility reasons and does not influence any of the results.  Supported for **engineType** _COMBUSTION_ or _HYBRID_. 
   * minimum: 1
   * @return cylinderCapacity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12000", value = "The cylinder capacity of the vehicle [cm&#x00B3;]. This value is present for compatibility reasons and does not influence any of the results.  Supported for **engineType** _COMBUSTION_ or _HYBRID_. ")
  @JsonIgnore

  public Integer getCylinderCapacity() {
        return cylinderCapacity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CYLINDER_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCylinderCapacity_JsonNullable() {
    return cylinderCapacity;
  }
  
  @JsonProperty(JSON_PROPERTY_CYLINDER_CAPACITY)
  public void setCylinderCapacity_JsonNullable(JsonNullable<Integer> cylinderCapacity) {
    this.cylinderCapacity = cylinderCapacity;
  }

  public void setCylinderCapacity(Integer cylinderCapacity) {
    this.cylinderCapacity = JsonNullable.<Integer>of(cylinderCapacity);
  }


  public Vehicle emissionStandard(EmissionStandard emissionStandard) {
    this.emissionStandard = JsonNullable.<EmissionStandard>of(emissionStandard);
    return this;
  }

   /**
   * Get emissionStandard
   * @return emissionStandard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EmissionStandard getEmissionStandard() {
        return emissionStandard.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMISSION_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EmissionStandard> getEmissionStandard_JsonNullable() {
    return emissionStandard;
  }
  
  @JsonProperty(JSON_PROPERTY_EMISSION_STANDARD)
  public void setEmissionStandard_JsonNullable(JsonNullable<EmissionStandard> emissionStandard) {
    this.emissionStandard = emissionStandard;
  }

  public void setEmissionStandard(EmissionStandard emissionStandard) {
    this.emissionStandard = JsonNullable.<EmissionStandard>of(emissionStandard);
  }


  public Vehicle lowEmissionZoneTypes(List<LowEmissionZoneTypes> lowEmissionZoneTypes) {
    this.lowEmissionZoneTypes = JsonNullable.<List<LowEmissionZoneTypes>>of(lowEmissionZoneTypes);
    return this;
  }

  public Vehicle addLowEmissionZoneTypesItem(LowEmissionZoneTypes lowEmissionZoneTypesItem) {
    if (this.lowEmissionZoneTypes == null || !this.lowEmissionZoneTypes.isPresent()) {
      this.lowEmissionZoneTypes = JsonNullable.<List<LowEmissionZoneTypes>>of(new ArrayList<>());
    }
    try {
      this.lowEmissionZoneTypes.get().add(lowEmissionZoneTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Comma-separated list of the low-emission zone types of the vehicle. For now, types are available only for Germany, so using more than one value is not meaningful.  Relevant for &#x60;routing&#x60;. 
   * @return lowEmissionZoneTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comma-separated list of the low-emission zone types of the vehicle. For now, types are available only for Germany, so using more than one value is not meaningful.  Relevant for `routing`. ")
  @JsonIgnore

  public List<LowEmissionZoneTypes> getLowEmissionZoneTypes() {
        return lowEmissionZoneTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOW_EMISSION_ZONE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LowEmissionZoneTypes>> getLowEmissionZoneTypes_JsonNullable() {
    return lowEmissionZoneTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_LOW_EMISSION_ZONE_TYPES)
  public void setLowEmissionZoneTypes_JsonNullable(JsonNullable<List<LowEmissionZoneTypes>> lowEmissionZoneTypes) {
    this.lowEmissionZoneTypes = lowEmissionZoneTypes;
  }

  public void setLowEmissionZoneTypes(List<LowEmissionZoneTypes> lowEmissionZoneTypes) {
    this.lowEmissionZoneTypes = JsonNullable.<List<LowEmissionZoneTypes>>of(lowEmissionZoneTypes);
  }


  public Vehicle particleReductionClass(ParticleReductionClass particleReductionClass) {
    this.particleReductionClass = JsonNullable.<ParticleReductionClass>of(particleReductionClass);
    return this;
  }

   /**
   * Get particleReductionClass
   * @return particleReductionClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ParticleReductionClass getParticleReductionClass() {
        return particleReductionClass.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARTICLE_REDUCTION_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ParticleReductionClass> getParticleReductionClass_JsonNullable() {
    return particleReductionClass;
  }
  
  @JsonProperty(JSON_PROPERTY_PARTICLE_REDUCTION_CLASS)
  public void setParticleReductionClass_JsonNullable(JsonNullable<ParticleReductionClass> particleReductionClass) {
    this.particleReductionClass = particleReductionClass;
  }

  public void setParticleReductionClass(ParticleReductionClass particleReductionClass) {
    this.particleReductionClass = JsonNullable.<ParticleReductionClass>of(particleReductionClass);
  }


  public Vehicle emptyWeight(Integer emptyWeight) {
    this.emptyWeight = JsonNullable.<Integer>of(emptyWeight);
    return this;
  }

   /**
   * The empty weight of the vehicle [kg].  Relevant for &#x60;routing&#x60;, &#x60;emissions&#x60;. 
   * minimum: 1
   * @return emptyWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15000", value = "The empty weight of the vehicle [kg].  Relevant for `routing`, `emissions`. ")
  @JsonIgnore

  public Integer getEmptyWeight() {
        return emptyWeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMPTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getEmptyWeight_JsonNullable() {
    return emptyWeight;
  }
  
  @JsonProperty(JSON_PROPERTY_EMPTY_WEIGHT)
  public void setEmptyWeight_JsonNullable(JsonNullable<Integer> emptyWeight) {
    this.emptyWeight = emptyWeight;
  }

  public void setEmptyWeight(Integer emptyWeight) {
    this.emptyWeight = JsonNullable.<Integer>of(emptyWeight);
  }


  public Vehicle loadWeight(Integer loadWeight) {
    this.loadWeight = JsonNullable.<Integer>of(loadWeight);
    return this;
  }

   /**
   * The weight of the vehicle&#39;s load [kg].  Relevant for &#x60;routing&#x60;, &#x60;emissions&#x60;. 
   * minimum: 0
   * @return loadWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25000", value = "The weight of the vehicle's load [kg].  Relevant for `routing`, `emissions`. ")
  @JsonIgnore

  public Integer getLoadWeight() {
        return loadWeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOAD_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getLoadWeight_JsonNullable() {
    return loadWeight;
  }
  
  @JsonProperty(JSON_PROPERTY_LOAD_WEIGHT)
  public void setLoadWeight_JsonNullable(JsonNullable<Integer> loadWeight) {
    this.loadWeight = loadWeight;
  }

  public void setLoadWeight(Integer loadWeight) {
    this.loadWeight = JsonNullable.<Integer>of(loadWeight);
  }


  public Vehicle totalPermittedWeight(Integer totalPermittedWeight) {
    this.totalPermittedWeight = JsonNullable.<Integer>of(totalPermittedWeight);
    return this;
  }

   /**
   * The total permitted weight of the vehicle and load [kg].  Relevant for &#x60;routing&#x60;, &#x60;toll&#x60;, &#x60;emissions&#x60;. 
   * minimum: 1
   * @return totalPermittedWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40000", value = "The total permitted weight of the vehicle and load [kg].  Relevant for `routing`, `toll`, `emissions`. ")
  @JsonIgnore

  public Integer getTotalPermittedWeight() {
        return totalPermittedWeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_PERMITTED_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTotalPermittedWeight_JsonNullable() {
    return totalPermittedWeight;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_PERMITTED_WEIGHT)
  public void setTotalPermittedWeight_JsonNullable(JsonNullable<Integer> totalPermittedWeight) {
    this.totalPermittedWeight = totalPermittedWeight;
  }

  public void setTotalPermittedWeight(Integer totalPermittedWeight) {
    this.totalPermittedWeight = JsonNullable.<Integer>of(totalPermittedWeight);
  }


  public Vehicle axleWeight(Integer axleWeight) {
    this.axleWeight = JsonNullable.<Integer>of(axleWeight);
    return this;
  }

   /**
   * The maximum distributed weight that may be supported by an axle of the vehicle [kg].  Relevant for &#x60;routing&#x60;, &#x60;toll&#x60;. 
   * minimum: 1
   * @return axleWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11500", value = "The maximum distributed weight that may be supported by an axle of the vehicle [kg].  Relevant for `routing`, `toll`. ")
  @JsonIgnore

  public Integer getAxleWeight() {
        return axleWeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AXLE_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getAxleWeight_JsonNullable() {
    return axleWeight;
  }
  
  @JsonProperty(JSON_PROPERTY_AXLE_WEIGHT)
  public void setAxleWeight_JsonNullable(JsonNullable<Integer> axleWeight) {
    this.axleWeight = axleWeight;
  }

  public void setAxleWeight(Integer axleWeight) {
    this.axleWeight = JsonNullable.<Integer>of(axleWeight);
  }


  public Vehicle numberOfAxles(Integer numberOfAxles) {
    this.numberOfAxles = JsonNullable.<Integer>of(numberOfAxles);
    return this;
  }

   /**
   * The total number of axles of the vehicle including the trailers.  Relevant for &#x60;toll&#x60;. 
   * minimum: 1
   * @return numberOfAxles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "The total number of axles of the vehicle including the trailers.  Relevant for `toll`. ")
  @JsonIgnore

  public Integer getNumberOfAxles() {
        return numberOfAxles.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER_OF_AXLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumberOfAxles_JsonNullable() {
    return numberOfAxles;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_AXLES)
  public void setNumberOfAxles_JsonNullable(JsonNullable<Integer> numberOfAxles) {
    this.numberOfAxles = numberOfAxles;
  }

  public void setNumberOfAxles(Integer numberOfAxles) {
    this.numberOfAxles = JsonNullable.<Integer>of(numberOfAxles);
  }


  public Vehicle numberOfTires(Integer numberOfTires) {
    this.numberOfTires = JsonNullable.<Integer>of(numberOfTires);
    return this;
  }

   /**
   * The total number of tires of the vehicle including the trailers.  Relevant for &#x60;toll&#x60;. 
   * minimum: 1
   * @return numberOfTires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The total number of tires of the vehicle including the trailers.  Relevant for `toll`. ")
  @JsonIgnore

  public Integer getNumberOfTires() {
        return numberOfTires.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER_OF_TIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumberOfTires_JsonNullable() {
    return numberOfTires;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_TIRES)
  public void setNumberOfTires_JsonNullable(JsonNullable<Integer> numberOfTires) {
    this.numberOfTires = numberOfTires;
  }

  public void setNumberOfTires(Integer numberOfTires) {
    this.numberOfTires = JsonNullable.<Integer>of(numberOfTires);
  }


  public Vehicle height(Integer height) {
    this.height = JsonNullable.<Integer>of(height);
    return this;
  }

   /**
   * The height of the vehicle [cm].  Relevant for &#x60;routing&#x60;, &#x60;toll&#x60;. 
   * minimum: 1
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "400", value = "The height of the vehicle [cm].  Relevant for `routing`, `toll`. ")
  @JsonIgnore

  public Integer getHeight() {
        return height.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getHeight_JsonNullable() {
    return height;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  public void setHeight_JsonNullable(JsonNullable<Integer> height) {
    this.height = height;
  }

  public void setHeight(Integer height) {
    this.height = JsonNullable.<Integer>of(height);
  }


  public Vehicle heightAboveFrontAxle(Integer heightAboveFrontAxle) {
    this.heightAboveFrontAxle = JsonNullable.<Integer>of(heightAboveFrontAxle);
    return this;
  }

   /**
   * The height above the front axle [cm].  Relevant for &#x60;toll&#x60;. 
   * minimum: 1
   * @return heightAboveFrontAxle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "400", value = "The height above the front axle [cm].  Relevant for `toll`. ")
  @JsonIgnore

  public Integer getHeightAboveFrontAxle() {
        return heightAboveFrontAxle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_ABOVE_FRONT_AXLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getHeightAboveFrontAxle_JsonNullable() {
    return heightAboveFrontAxle;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_ABOVE_FRONT_AXLE)
  public void setHeightAboveFrontAxle_JsonNullable(JsonNullable<Integer> heightAboveFrontAxle) {
    this.heightAboveFrontAxle = heightAboveFrontAxle;
  }

  public void setHeightAboveFrontAxle(Integer heightAboveFrontAxle) {
    this.heightAboveFrontAxle = JsonNullable.<Integer>of(heightAboveFrontAxle);
  }


  public Vehicle length(Integer length) {
    this.length = JsonNullable.<Integer>of(length);
    return this;
  }

   /**
   * The length of the vehicle [cm].  Relevant for &#x60;routing&#x60;, &#x60;toll&#x60;. 
   * minimum: 1
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1650", value = "The length of the vehicle [cm].  Relevant for `routing`, `toll`. ")
  @JsonIgnore

  public Integer getLength() {
        return length.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getLength_JsonNullable() {
    return length;
  }
  
  @JsonProperty(JSON_PROPERTY_LENGTH)
  public void setLength_JsonNullable(JsonNullable<Integer> length) {
    this.length = length;
  }

  public void setLength(Integer length) {
    this.length = JsonNullable.<Integer>of(length);
  }


  public Vehicle width(Integer width) {
    this.width = JsonNullable.<Integer>of(width);
    return this;
  }

   /**
   * The width of the vehicle [cm].  Relevant for &#x60;routing&#x60;, &#x60;toll&#x60;. 
   * minimum: 1
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "254", value = "The width of the vehicle [cm].  Relevant for `routing`, `toll`. ")
  @JsonIgnore

  public Integer getWidth() {
        return width.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getWidth_JsonNullable() {
    return width;
  }
  
  @JsonProperty(JSON_PROPERTY_WIDTH)
  public void setWidth_JsonNullable(JsonNullable<Integer> width) {
    this.width = width;
  }

  public void setWidth(Integer width) {
    this.width = JsonNullable.<Integer>of(width);
  }


  public Vehicle hazardousMaterials(List<HazardousMaterials> hazardousMaterials) {
    this.hazardousMaterials = JsonNullable.<List<HazardousMaterials>>of(hazardousMaterials);
    return this;
  }

  public Vehicle addHazardousMaterialsItem(HazardousMaterials hazardousMaterialsItem) {
    if (this.hazardousMaterials == null || !this.hazardousMaterials.isPresent()) {
      this.hazardousMaterials = JsonNullable.<List<HazardousMaterials>>of(new ArrayList<>());
    }
    try {
      this.hazardousMaterials.get().add(hazardousMaterialsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Comma-separated list of hazardous materials the vehicle has loaded. If NONE is specified along with other hazardous materials it is ignored.  Relevant for &#x60;routing&#x60;. 
   * @return hazardousMaterials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comma-separated list of hazardous materials the vehicle has loaded. If NONE is specified along with other hazardous materials it is ignored.  Relevant for `routing`. ")
  @JsonIgnore

  public List<HazardousMaterials> getHazardousMaterials() {
        return hazardousMaterials.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAZARDOUS_MATERIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<HazardousMaterials>> getHazardousMaterials_JsonNullable() {
    return hazardousMaterials;
  }
  
  @JsonProperty(JSON_PROPERTY_HAZARDOUS_MATERIALS)
  public void setHazardousMaterials_JsonNullable(JsonNullable<List<HazardousMaterials>> hazardousMaterials) {
    this.hazardousMaterials = hazardousMaterials;
  }

  public void setHazardousMaterials(List<HazardousMaterials> hazardousMaterials) {
    this.hazardousMaterials = JsonNullable.<List<HazardousMaterials>>of(hazardousMaterials);
  }


  public Vehicle tunnelRestrictionCode(TunnelRestrictionCode tunnelRestrictionCode) {
    this.tunnelRestrictionCode = JsonNullable.<TunnelRestrictionCode>of(tunnelRestrictionCode);
    return this;
  }

   /**
   * Get tunnelRestrictionCode
   * @return tunnelRestrictionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TunnelRestrictionCode getTunnelRestrictionCode() {
        return tunnelRestrictionCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TUNNEL_RESTRICTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TunnelRestrictionCode> getTunnelRestrictionCode_JsonNullable() {
    return tunnelRestrictionCode;
  }
  
  @JsonProperty(JSON_PROPERTY_TUNNEL_RESTRICTION_CODE)
  public void setTunnelRestrictionCode_JsonNullable(JsonNullable<TunnelRestrictionCode> tunnelRestrictionCode) {
    this.tunnelRestrictionCode = tunnelRestrictionCode;
  }

  public void setTunnelRestrictionCode(TunnelRestrictionCode tunnelRestrictionCode) {
    this.tunnelRestrictionCode = JsonNullable.<TunnelRestrictionCode>of(tunnelRestrictionCode);
  }


  public Vehicle truckRoutes(List<TruckRoutes> truckRoutes) {
    this.truckRoutes = JsonNullable.<List<TruckRoutes>>of(truckRoutes);
    return this;
  }

  public Vehicle addTruckRoutesItem(TruckRoutes truckRoutesItem) {
    if (this.truckRoutes == null || !this.truckRoutes.isPresent()) {
      this.truckRoutes = JsonNullable.<List<TruckRoutes>>of(new ArrayList<>());
    }
    try {
      this.truckRoutes.get().add(truckRoutesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Comma-separated list of truck routes the vehicle has to follow. This parameter will be ignored for non-truck profiles such as EUR_CAR, EUR_VAN, USA_1_PICKUP or AUS_LCV_LIGHT_COMMERCIAL.  * &#x60;DE_LKWUEBERLSTVAUSNV&#x60;  Preferred routes for long trucks in Germany, also known as Lang-LKW.  * &#x60;NL_LZV&#x60;  Preferred routes for long trucks in the Netherlands, also known as LZV (Langere en Zwaardere Vrachtautocombinatie).  * &#x60;NZ_HPMV&#x60;  The network for High Productivity Motor Vehicles (HPMV) carrying the maximum loads available under a permit (New Zeland Transport Agency).  * &#x60;SE_BK_1&#x60;  Public roads and bridges that support up to 64 t total permitted weight (Swedish Transport Administration).  * &#x60;SE_BK_2&#x60;  Public roads and bridges that support up to 51.4 t total permitted weight.  Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).  * &#x60;SE_BK_3&#x60;  Public roads and bridges that support up to 37.5 t total permitted weight.  Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).  * &#x60;SE_BK_4&#x60;  Public roads and bridges that support up to 74 t total permitted weight (draft summer 2018, Swedish Transport Administration).  * &#x60;US_STAA&#x60;  Routes that belong to the highway network as defined by the Surface Transportation Assistance Act in the US.  * &#x60;US_TD&#x60;  Part of a state-designated highway network for trucks in the US.  * &#x60;AU_B_DOUBLE&#x60;  B-Double routes as defined in Australia.  * &#x60;AU_B_DOUBLE_HML&#x60;  Routes for B-Double vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * &#x60;AU_B_TRIPLE&#x60;  B-Triple routes as defined in Australia.  * &#x60;AU_B_TRIPLE_HML&#x60;  Routes for B-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * &#x60;AU_AB_TRIPLE&#x60;  Routes for AB-Triple vehicle combinations operating (Australian Transport Administration).  * &#x60;AU_AB_TRIPLE_HML&#x60;  Routes for AB-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * &#x60;NONE&#x60;  This value does not refer to a truck route. Use a list with only the _NONE_ value for the truck routes  at a waypoint to specify that no truck route must be used from that waypoint on. An empty list of truck routes  at a waypoint means that the truck routes don&#39;t change at the waypoint. If _NONE_ is specified along with other  truck routes it is ignored.  Relevant for &#x60;routing&#x60;. Cannot be used with **options[routingMode]&#x3D;MONETARY**. 
   * @return truckRoutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comma-separated list of truck routes the vehicle has to follow. This parameter will be ignored for non-truck profiles such as EUR_CAR, EUR_VAN, USA_1_PICKUP or AUS_LCV_LIGHT_COMMERCIAL.  * `DE_LKWUEBERLSTVAUSNV`  Preferred routes for long trucks in Germany, also known as Lang-LKW.  * `NL_LZV`  Preferred routes for long trucks in the Netherlands, also known as LZV (Langere en Zwaardere Vrachtautocombinatie).  * `NZ_HPMV`  The network for High Productivity Motor Vehicles (HPMV) carrying the maximum loads available under a permit (New Zeland Transport Agency).  * `SE_BK_1`  Public roads and bridges that support up to 64 t total permitted weight (Swedish Transport Administration).  * `SE_BK_2`  Public roads and bridges that support up to 51.4 t total permitted weight.  Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).  * `SE_BK_3`  Public roads and bridges that support up to 37.5 t total permitted weight.  Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).  * `SE_BK_4`  Public roads and bridges that support up to 74 t total permitted weight (draft summer 2018, Swedish Transport Administration).  * `US_STAA`  Routes that belong to the highway network as defined by the Surface Transportation Assistance Act in the US.  * `US_TD`  Part of a state-designated highway network for trucks in the US.  * `AU_B_DOUBLE`  B-Double routes as defined in Australia.  * `AU_B_DOUBLE_HML`  Routes for B-Double vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * `AU_B_TRIPLE`  B-Triple routes as defined in Australia.  * `AU_B_TRIPLE_HML`  Routes for B-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * `AU_AB_TRIPLE`  Routes for AB-Triple vehicle combinations operating (Australian Transport Administration).  * `AU_AB_TRIPLE_HML`  Routes for AB-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).  * `NONE`  This value does not refer to a truck route. Use a list with only the _NONE_ value for the truck routes  at a waypoint to specify that no truck route must be used from that waypoint on. An empty list of truck routes  at a waypoint means that the truck routes don't change at the waypoint. If _NONE_ is specified along with other  truck routes it is ignored.  Relevant for `routing`. Cannot be used with **options[routingMode]=MONETARY**. ")
  @JsonIgnore

  public List<TruckRoutes> getTruckRoutes() {
        return truckRoutes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRUCK_ROUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TruckRoutes>> getTruckRoutes_JsonNullable() {
    return truckRoutes;
  }
  
  @JsonProperty(JSON_PROPERTY_TRUCK_ROUTES)
  public void setTruckRoutes_JsonNullable(JsonNullable<List<TruckRoutes>> truckRoutes) {
    this.truckRoutes = truckRoutes;
  }

  public void setTruckRoutes(List<TruckRoutes> truckRoutes) {
    this.truckRoutes = JsonNullable.<List<TruckRoutes>>of(truckRoutes);
  }


  public Vehicle commercial(Boolean commercial) {
    this.commercial = JsonNullable.<Boolean>of(commercial);
    return this;
  }

   /**
   * Specifies if the vehicle usage is commercial.  Relevant for &#x60;toll&#x60;. 
   * @return commercial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Specifies if the vehicle usage is commercial.  Relevant for `toll`. ")
  @JsonIgnore

  public Boolean getCommercial() {
        return commercial.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCommercial_JsonNullable() {
    return commercial;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMERCIAL)
  public void setCommercial_JsonNullable(JsonNullable<Boolean> commercial) {
    this.commercial = commercial;
  }

  public void setCommercial(Boolean commercial) {
    this.commercial = JsonNullable.<Boolean>of(commercial);
  }


  public Vehicle etcSubscriptions(List<EtcSubscriptionTypes> etcSubscriptions) {
    this.etcSubscriptions = JsonNullable.<List<EtcSubscriptionTypes>>of(etcSubscriptions);
    return this;
  }

  public Vehicle addEtcSubscriptionsItem(EtcSubscriptionTypes etcSubscriptionsItem) {
    if (this.etcSubscriptions == null || !this.etcSubscriptions.isPresent()) {
      this.etcSubscriptions = JsonNullable.<List<EtcSubscriptionTypes>>of(new ArrayList<>());
    }
    try {
      this.etcSubscriptions.get().add(etcSubscriptionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A comma separated list of ETC Subscriptions. See [here](./concepts/electronic-toll-collection) for more information on available subscriptions.  Relevant for &#x60;toll&#x60;. 
   * @return etcSubscriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma separated list of ETC Subscriptions. See [here](./concepts/electronic-toll-collection) for more information on available subscriptions.  Relevant for `toll`. ")
  @JsonIgnore

  public List<EtcSubscriptionTypes> getEtcSubscriptions() {
        return etcSubscriptions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ETC_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EtcSubscriptionTypes>> getEtcSubscriptions_JsonNullable() {
    return etcSubscriptions;
  }
  
  @JsonProperty(JSON_PROPERTY_ETC_SUBSCRIPTIONS)
  public void setEtcSubscriptions_JsonNullable(JsonNullable<List<EtcSubscriptionTypes>> etcSubscriptions) {
    this.etcSubscriptions = etcSubscriptions;
  }

  public void setEtcSubscriptions(List<EtcSubscriptionTypes> etcSubscriptions) {
    this.etcSubscriptions = JsonNullable.<List<EtcSubscriptionTypes>>of(etcSubscriptions);
  }


  /**
   * Return true if this Vehicle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return equalsNullable(this.engineType, vehicle.engineType) &&
        equalsNullable(this.fuelType, vehicle.fuelType) &&
        equalsNullable(this.electricityType, vehicle.electricityType) &&
        equalsNullable(this.averageFuelConsumption, vehicle.averageFuelConsumption) &&
        equalsNullable(this.averageElectricityConsumption, vehicle.averageElectricityConsumption) &&
        equalsNullable(this.bioFuelRatio, vehicle.bioFuelRatio) &&
        equalsNullable(this.hybridRatio, vehicle.hybridRatio) &&
        equalsNullable(this.dualFuelRatio, vehicle.dualFuelRatio) &&
        equalsNullable(this.cylinderCapacity, vehicle.cylinderCapacity) &&
        equalsNullable(this.emissionStandard, vehicle.emissionStandard) &&
        equalsNullable(this.lowEmissionZoneTypes, vehicle.lowEmissionZoneTypes) &&
        equalsNullable(this.particleReductionClass, vehicle.particleReductionClass) &&
        equalsNullable(this.emptyWeight, vehicle.emptyWeight) &&
        equalsNullable(this.loadWeight, vehicle.loadWeight) &&
        equalsNullable(this.totalPermittedWeight, vehicle.totalPermittedWeight) &&
        equalsNullable(this.axleWeight, vehicle.axleWeight) &&
        equalsNullable(this.numberOfAxles, vehicle.numberOfAxles) &&
        equalsNullable(this.numberOfTires, vehicle.numberOfTires) &&
        equalsNullable(this.height, vehicle.height) &&
        equalsNullable(this.heightAboveFrontAxle, vehicle.heightAboveFrontAxle) &&
        equalsNullable(this.length, vehicle.length) &&
        equalsNullable(this.width, vehicle.width) &&
        equalsNullable(this.hazardousMaterials, vehicle.hazardousMaterials) &&
        equalsNullable(this.tunnelRestrictionCode, vehicle.tunnelRestrictionCode) &&
        equalsNullable(this.truckRoutes, vehicle.truckRoutes) &&
        equalsNullable(this.commercial, vehicle.commercial) &&
        equalsNullable(this.etcSubscriptions, vehicle.etcSubscriptions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(engineType), hashCodeNullable(fuelType), hashCodeNullable(electricityType), hashCodeNullable(averageFuelConsumption), hashCodeNullable(averageElectricityConsumption), hashCodeNullable(bioFuelRatio), hashCodeNullable(hybridRatio), hashCodeNullable(dualFuelRatio), hashCodeNullable(cylinderCapacity), hashCodeNullable(emissionStandard), hashCodeNullable(lowEmissionZoneTypes), hashCodeNullable(particleReductionClass), hashCodeNullable(emptyWeight), hashCodeNullable(loadWeight), hashCodeNullable(totalPermittedWeight), hashCodeNullable(axleWeight), hashCodeNullable(numberOfAxles), hashCodeNullable(numberOfTires), hashCodeNullable(height), hashCodeNullable(heightAboveFrontAxle), hashCodeNullable(length), hashCodeNullable(width), hashCodeNullable(hazardousMaterials), hashCodeNullable(tunnelRestrictionCode), hashCodeNullable(truckRoutes), hashCodeNullable(commercial), hashCodeNullable(etcSubscriptions));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    fuelType: ").append(toIndentedString(fuelType)).append("\n");
    sb.append("    electricityType: ").append(toIndentedString(electricityType)).append("\n");
    sb.append("    averageFuelConsumption: ").append(toIndentedString(averageFuelConsumption)).append("\n");
    sb.append("    averageElectricityConsumption: ").append(toIndentedString(averageElectricityConsumption)).append("\n");
    sb.append("    bioFuelRatio: ").append(toIndentedString(bioFuelRatio)).append("\n");
    sb.append("    hybridRatio: ").append(toIndentedString(hybridRatio)).append("\n");
    sb.append("    dualFuelRatio: ").append(toIndentedString(dualFuelRatio)).append("\n");
    sb.append("    cylinderCapacity: ").append(toIndentedString(cylinderCapacity)).append("\n");
    sb.append("    emissionStandard: ").append(toIndentedString(emissionStandard)).append("\n");
    sb.append("    lowEmissionZoneTypes: ").append(toIndentedString(lowEmissionZoneTypes)).append("\n");
    sb.append("    particleReductionClass: ").append(toIndentedString(particleReductionClass)).append("\n");
    sb.append("    emptyWeight: ").append(toIndentedString(emptyWeight)).append("\n");
    sb.append("    loadWeight: ").append(toIndentedString(loadWeight)).append("\n");
    sb.append("    totalPermittedWeight: ").append(toIndentedString(totalPermittedWeight)).append("\n");
    sb.append("    axleWeight: ").append(toIndentedString(axleWeight)).append("\n");
    sb.append("    numberOfAxles: ").append(toIndentedString(numberOfAxles)).append("\n");
    sb.append("    numberOfTires: ").append(toIndentedString(numberOfTires)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    heightAboveFrontAxle: ").append(toIndentedString(heightAboveFrontAxle)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    hazardousMaterials: ").append(toIndentedString(hazardousMaterials)).append("\n");
    sb.append("    tunnelRestrictionCode: ").append(toIndentedString(tunnelRestrictionCode)).append("\n");
    sb.append("    truckRoutes: ").append(toIndentedString(truckRoutes)).append("\n");
    sb.append("    commercial: ").append(toIndentedString(commercial)).append("\n");
    sb.append("    etcSubscriptions: ").append(toIndentedString(etcSubscriptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

