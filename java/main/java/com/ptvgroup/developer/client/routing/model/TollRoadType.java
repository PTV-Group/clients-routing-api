/*
 * Routing
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver's working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routing.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import io.swagger.annotations.ApiModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The reason why toll is charged.    * &#x60;GENERAL&#x60; - A general toll road where no special toll applies.    * &#x60;CITY&#x60; - An urban area or city is subject to toll.    * &#x60;BRIDGE&#x60; - A bridge is subject to toll.    * &#x60;TUNNEL&#x60; - A tunnel is subject to toll.    * &#x60;FERRY&#x60; - A ferry is subject to toll.    * &#x60;MOUNTAIN_PASS&#x60; - A mountain pass is subject to toll.  
 */
public enum TollRoadType {
  
  GENERAL("GENERAL"),
  
  CITY("CITY"),
  
  BRIDGE("BRIDGE"),
  
  TUNNEL("TUNNEL"),
  
  FERRY("FERRY"),
  
  MOUNTAIN_PASS("MOUNTAIN_PASS");

  private String value;

  TollRoadType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static TollRoadType fromValue(String value) {
    for (TollRoadType b : TollRoadType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

