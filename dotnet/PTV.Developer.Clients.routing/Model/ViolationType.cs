/*
 * Routing
 *
 * With the Routing service you can calculate routes from A to B taking into account vehicle-specific restrictions, traffic situations, toll, emissions, driver's working hours, service times and opening intervals.
 *
 * The version of the OpenAPI document: 1.22
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.routing.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.routing.Model
{
    /// <summary>
    /// The reason why the road or the schedule is violated.  * &#x60;PROHIBITED&#x60; - The violated road is prohibited in general for the current vehicle.    * &#x60;DELIVERY_ONLY&#x60; - The violated road is prohibited except for delivery reasons but delivery is disallowed for the cars and vans.    * &#x60;URBAN&#x60; - The violated road is prohibited because it is flagged as urban.    * &#x60;RESIDENTS_ONLY&#x60; - The violated road is prohibited because it is flagged as residents only for the current vehicle.    * &#x60;RESTRICTED_ACCESS&#x60; - A point with restricted access, e.g. a gate or a bollard was passed.    * &#x60;VEHICLE_PROPERTY&#x60; - The violated road is prohibited for the current vehicle due to a vehicle property such as the weight or height.    * &#x60;COMBINED_TRANSPORT&#x60; - The violated road is a boat(ferry) or rail (train or rail shuttle) connection prohibited for the current vehicle.  * &#x60;SCHEDULE&#x60; - The schedule is violated. The reasons can be found in **scheduleViolationTypes**.  * &#x60;BLOCKED_ROAD_BY_INTERSECTION&#x60; - The violated road has been blocked through **options[blockIntersectingRoads]**.
    /// </summary>
    /// <value>The reason why the road or the schedule is violated.  * &#x60;PROHIBITED&#x60; - The violated road is prohibited in general for the current vehicle.    * &#x60;DELIVERY_ONLY&#x60; - The violated road is prohibited except for delivery reasons but delivery is disallowed for the cars and vans.    * &#x60;URBAN&#x60; - The violated road is prohibited because it is flagged as urban.    * &#x60;RESIDENTS_ONLY&#x60; - The violated road is prohibited because it is flagged as residents only for the current vehicle.    * &#x60;RESTRICTED_ACCESS&#x60; - A point with restricted access, e.g. a gate or a bollard was passed.    * &#x60;VEHICLE_PROPERTY&#x60; - The violated road is prohibited for the current vehicle due to a vehicle property such as the weight or height.    * &#x60;COMBINED_TRANSPORT&#x60; - The violated road is a boat(ferry) or rail (train or rail shuttle) connection prohibited for the current vehicle.  * &#x60;SCHEDULE&#x60; - The schedule is violated. The reasons can be found in **scheduleViolationTypes**.  * &#x60;BLOCKED_ROAD_BY_INTERSECTION&#x60; - The violated road has been blocked through **options[blockIntersectingRoads]**.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ViolationType
    {
        /// <summary>
        /// Enum PROHIBITED for value: PROHIBITED
        /// </summary>
        [EnumMember(Value = "PROHIBITED")]
        PROHIBITED = 1,

        /// <summary>
        /// Enum DELIVERY_ONLY for value: DELIVERY_ONLY
        /// </summary>
        [EnumMember(Value = "DELIVERY_ONLY")]
        DELIVERY_ONLY = 2,

        /// <summary>
        /// Enum URBAN for value: URBAN
        /// </summary>
        [EnumMember(Value = "URBAN")]
        URBAN = 3,

        /// <summary>
        /// Enum RESIDENTS_ONLY for value: RESIDENTS_ONLY
        /// </summary>
        [EnumMember(Value = "RESIDENTS_ONLY")]
        RESIDENTS_ONLY = 4,

        /// <summary>
        /// Enum RESTRICTED_ACCESS for value: RESTRICTED_ACCESS
        /// </summary>
        [EnumMember(Value = "RESTRICTED_ACCESS")]
        RESTRICTED_ACCESS = 5,

        /// <summary>
        /// Enum VEHICLE_PROPERTY for value: VEHICLE_PROPERTY
        /// </summary>
        [EnumMember(Value = "VEHICLE_PROPERTY")]
        VEHICLE_PROPERTY = 6,

        /// <summary>
        /// Enum COMBINED_TRANSPORT for value: COMBINED_TRANSPORT
        /// </summary>
        [EnumMember(Value = "COMBINED_TRANSPORT")]
        COMBINED_TRANSPORT = 7,

        /// <summary>
        /// Enum SCHEDULE for value: SCHEDULE
        /// </summary>
        [EnumMember(Value = "SCHEDULE")]
        SCHEDULE = 8,

        /// <summary>
        /// Enum BLOCKED_ROAD_BY_INTERSECTION for value: BLOCKED_ROAD_BY_INTERSECTION
        /// </summary>
        [EnumMember(Value = "BLOCKED_ROAD_BY_INTERSECTION")]
        BLOCKED_ROAD_BY_INTERSECTION = 9

    }

}
